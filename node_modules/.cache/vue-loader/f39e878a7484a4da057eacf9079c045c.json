{"remainingRequest":"E:\\ai_web\\AI_web\\AI_learning_teacher\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\ai_web\\AI_web\\AI_learning_teacher\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ai_web\\AI_web\\AI_learning_teacher\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ai_web\\AI_web\\AI_learning_teacher\\src\\views\\course_list\\educourse_list.vue?vue&type=template&id=09e3055a&scoped=true","dependencies":[{"path":"E:\\ai_web\\AI_web\\AI_learning_teacher\\src\\views\\course_list\\educourse_list.vue","mtime":1745852093784},{"path":"E:\\ai_web\\AI_web\\AI_learning_teacher\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745493482913},{"path":"E:\\ai_web\\AI_web\\AI_learning_teacher\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1745493497600},{"path":"E:\\ai_web\\AI_web\\AI_learning_teacher\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745493482913},{"path":"E:\\ai_web\\AI_web\\AI_learning_teacher\\node_modules\\vue-loader\\lib\\index.js","mtime":1745493493155}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}